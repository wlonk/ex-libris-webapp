# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.conf import settings
from django.conf.urls import include, url
from django.conf.urls.static import static
from django.contrib import admin
from django.views.generic import TemplateView
from django.views import defaults as default_views

from ex_libris.dropbox_auth.views import ExchangeDropboxTokensView


urlpatterns = (
    [
        # Django Admin, use {% url 'admin:index' %}
        url(settings.ADMIN_URL, include(admin.site.urls)),
        # Handle social auth on the Python side, not the JS side:
        url(r'^accounts/', include('allauth.urls')),
        # Your stuff: custom urls includes go here
        url(r'^api/', include('ex_libris.books.urls', namespace='books')),
        url(r'^api-token-auth/', ExchangeDropboxTokensView.as_view()),
    ] +
    static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) +
    [
        url(
            # We don't include a $, because we want to grab anything, and let
            # the frontend's routes handle it.
            # So we have to put this last.
            r'^',
            # This file is generated by the frontend
            TemplateView.as_view(template_name='index.html'),
            name="home",
        ),
    ]
)

if settings.DEBUG:
    # This allows the error pages to be debugged during development, just visit
    # these url in browser to see how these error pages look like.
    urlpatterns += [
        url(
            r'^400/$',
            default_views.bad_request,
            kwargs={'exception': Exception("Bad Request!")},
        ),
        url(
            r'^403/$',
            default_views.permission_denied,
            kwargs={'exception': Exception("Permissin Denied")},
        ),
        url(
            r'^404/$',
            default_views.page_not_found,
            kwargs={'exception': Exception("Page not Found")},
        ),
        url(
            r'^500/$', default_views.server_error),
    ]
